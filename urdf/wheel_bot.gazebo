<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <gazebo reference="chassis_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="chassis_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="chassis">
    <material>Gazebo/Orange</material>
  </gazebo>

  <!-- wheel motors -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>10</torque>
      <commandTopic>/cmd_vel</commandTopic>
      <odometryTopic>/odom</odometryTopic>
      <odometryFrame>/odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>

  <!--RGBD camera -->
  <gazebo reference="camera_rgb_frame">
   <sensor type="depth" name="camera">
     <always_on>true</always_on>
     <visualize>false</visualize>
     <update_rate>15.0</update_rate>
     <camera name="front">
       <horizontal_fov>1.5</horizontal_fov><!--default=1.047197-->
       <image>
         <!-- openni_kinect plugin works only with BGR8 -->
         <format>B8G8R8</format>
         <width>1024</width>
         <height>576</height>
       </image>
       <clip>
         <near>0.01</near>
         <far>9</far>
       </clip>
     </camera>
     <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
       <baseline>0.1</baseline>
       <alwaysOn>true</alwaysOn>
       <updateRate>15.0</updateRate>
       <cameraName>camera</cameraName>
       <imageTopicName>/rtabmap/rgb/image</imageTopicName>
       <cameraInfoTopicName>/rtabmap/rgb/camera_info</cameraInfoTopicName>
       <depthImageTopicName>/rtabmap/depth/image</depthImageTopicName>
       <depthImageCameraInfoTopicName>/rtabmap/depth/camera_info</depthImageCameraInfoTopicName>
       <pointCloudTopicName>/rtabmap/depth/points</pointCloudTopicName>
       <frameName>camera_rgb_optical_frame</frameName>
       <pointCloudCutoff>0.5</pointCloudCutoff>
       <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
       <CxPrime>0</CxPrime>
       <Cx>0</Cx>
       <Cy>0</Cy>
       <focalLength>0</focalLength>
       <hackBaseline>0</hackBaseline>
     </plugin>
   </sensor>
 </gazebo>

 <!-- hokuyo laser sensor -->
  <gazebo reference="hokuyo">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rtabmap/scan</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
