<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <!-- Arguments for launch file with defaults provided -->
  <arg name="database_path"     default="rtabmap.db"/>
  <arg name="rgb_topic"   default="/rtabmap/rgb/image"/>
  <arg name="depth_topic" default="/rtabmap/depth/image"/>
  <arg name="camera_info_topic" default="/rtabmap/rgb/camera_info"/>


  <!-- Mapping Node -->
  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen">

      <!-- Basic RTAB-Map Parameters -->
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="frame_id"            type="string" value="base_footprint"/>
      <param name="odom_frame_id"       type="string" value="odom"/>
      <param name="subscribe_depth"     type="bool"   value="true"/>
      <param name="subscribe_scan"      type="bool"   value="true"/>
      <param name="use_action_for_goal" type="bool"   value="true"/>

      <remap from="move_base_simple/goal" to="/planner/move_base_simple/goal"/>

      <!-- RTAB-Map Inputs -->
      <!--<remap from="/laser_scan"            to="/rtabmap/scan"/>
      <remap from="/kinect/rgb/image_raw"  to="$(arg rgb_topic)"/>
      <remap from="/kinect/depth/image_raw"     to="$(arg depth_topic)"/>
      <remap from="/kinect/rgb/camera_info" to="$(arg camera_info_topic)"/>-->

      <!-- RTAB-Map Output -->
      <remap from="grid_map" to="/map"/>

      <!-- Rate (Hz) at which new nodes are added to map -->
      <param name="Rtabmap/DetectionRate" type="string" value="1"/>

      <!-- 2D SLAM -->
      <param name="Reg/Force3DoF" type="string" value="true"/>

      <!-- Loop Closure Detection -->
      <!-- 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB 9=KAZE -->
      <param name="Kp/DetectorStrategy" type="string" value="0"/>

      <!-- Maximum visual words per image (bag-of-words) -->
      <param name="Kp/MaxFeatures" type="string" value="400"/>

      <!-- Used to extract more or less SURF features -->
      <param name="SURF/HessianThreshold" type="string" value="100"/>

      <!-- Loop Closure Constraint -->
      <!-- 0=Visual, 1=ICP (1 requires scan)-->
      <param name="Reg/Strategy" type="string" value="0"/>

      <!-- Minimum visual inliers to accept loop closure -->
      <param name="Vis/MinInliers" type="string" value="15"/>

      <!-- Set to false to avoid saving data when robot is not moving -->
      <param name="Mem/IncrementalMemory" type="string" value="false"/>
    </node>
  </group>

  <!-- ROS navigation stack move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find slam_project)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find slam_project)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find slam_project)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find slam_project)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find slam_project)/config/base_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="/cmd_vel"/>
    <remap from="odom" to="odom"/>
    <remap from="scan" to="/rtabmap/scan"/>

    <!-- A fast, interpolated global planner built as a more flexible replacement to navfn.
    (navfn/NavfnROS, global_planner/GlobalPlanner, carrot_planner/CarrotPlanner) -->
    <param name="base_global_planner" type="string" value="global_planner/GlobalPlanner" />

    <!-- provides an interface for local planners used in navigation -->
    <!-- base_local_planner/TrajectoryPlannerROS, eband_local_planner/EBandPlannerROS, teb_local_planner/TebLocalPlannerROS  -->
    <!-- sudo apt-get install ros-kinetic-eband-local-planner -->
    <!-- sudo apt-get install ros-kinetic-teb-local-planner -->
    <!-- <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/> -->
    <!-- <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" /> -->
    <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS"/>
    <param name="controller_frequency" value="50.0" />
    <param name="planner_frequency" value="10.0" />
  </node>
</launch>
